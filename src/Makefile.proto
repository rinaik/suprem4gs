#----------------------------------------------------------------------
# Makefile for SUPREM-IV.GS
#
#   %M%                Version %I%
#   Last Modification : %G% %U%
#
#  Original: Stephen Hansen (hansen@gloworm.stanford.edu)
#		Mon Feb  1 14:57:45 PST 1993
#
#----------------------------------------------------------------------

# change these lines when porting to other machines
#
# SYS should be one of {BSD, CONVEX, HPUX, CRAY}
# BSD - "vanilla" BSD4.2 system
# SYSV - vanilla system V unix
# CONVEX - like BSD but uses vectorizing Fortran sparse matrix routines
# HPUX - example of a non-BSD system
# CRAY - like HPUX, but uses vectorizing Fortran sparse matrix routines
SYS     = SYSV

#.. Where are we?
HERE	 = .

#.. What are we going to call it and where does it go?
BINDIR  = $(HERE)/../bin
SUPREM	= suprem4

#.. Edit these to change the location of the help and data files
HELPDIR	= $(HERE)/../help
DATADIR	= $(HERE)/../data

#.. Which C and Fortran Compiler?
CC	= gcc
FC	= f77

#.. What optimization level for the compilers?
COPT	= -O2
FOPT	= -O2
#COPT	= -g
#FOPT	= -g

#.. if you want the X11 plotting uncomment the following.
#GRLIBS	= -lXaw -lXmu -lXt -lXext -lX11
#GRINC	=
#GRARC	= $(LIBDEST)/xsupr4.a
#GRSRCS	= xsupr4/Graph.c xsupr4/app1.c xsupr4/draw.c xsupr4/help.c \
#	xsupr4/hpgl.c xsupr4/idraw.c xsupr4/interface.c xsupr4/ps.c \
#	xsupr4/xgX.c
#GROBJS	= xsupr4/Graph.o xsupr4/app1.o xsupr4/draw.o xsupr4/help.o \
#	xsupr4/hpgl.o xsupr4/idraw.o xsupr4/interface.o xsupr4/ps.o \
#	xsupr4/xgX.o


#.. otherwise if you want the gplot plotting package then use this.
#.. although you need to change the /icl/include and /icl/lib to
#.. wherever the package include and archive files are.
#GRLIBS	= -L/icl/lib -lgplot -lhigh2
#GRINC	= -I/icl/include
#GRLIBS        = -L$(PISCES_HOME)/icl/lib -lgplot -lhigh2
#GRINC = -I$(PISCES_HOME)/icl/include
#GRARC	= $(LIBDEST)/gpsup.a
#GRSRCS	= gpsup/gpcover.c
#GROBJS	= gpsup/gpcover.o

#or disable the plot function by use fake gp functions
GRARC	= $(LIBDEST)/gpfake.a
GRSRCS	= gpsup/gpfake.c
GROBJS	= gpsup/gpfake.o

# sysV uses termlib
#LIBS	= $(GRLIBS) -ly -ll -lm -ltermlib
# bsd uses termcap
#LIBS	= $(GRLIBS) -ly -ll -lm -ltermcap
LIBS  = $(GRLIBS) -lm


#.. SysV users take note!  Down where the archive files are ranlib'd
#.. is some real crufty stuff.  This is to get around a bug in ranlib
#.. that shows up mainly when running gmake with the multi-job flag.
AR	= ar
ARFLAGS	= rv
#.. BSD folks need this.
RANLIB	= ranlib
#.. SysV folks need to do this.
#RANLIB	= \#

#--- You shouldn't need to mess with anything below here ---
#----------------------------------------------------------------------

MANDIR = -DMANLOC='"$(HELPDIR)"'
KEYFILE = -DKEYLOC='"$(DATADIR)/suprem.uk"'
MODELFILE = -DMODELLOC='"$(DATADIR)/modelrc"'
IMP_FILE = -DIMPLOC='"$(DATADIR)/sup4gs.imp"'
DATAFILES = $(MANDIR) $(KEYFILE) $(MODELFILE) $(IMP_FILE)

LOCDEFS	= -DDEVICE -DHAVE_KSH -D$(SYS) -DNO_F77

INCLUDE = $(GRINC) -Iinclude
CFLAGS	= -c $(COPT) $(LOCDEFS) $(INCLUDE)
LFLAGS	= -v -n -q $(COPT) $(LOCDEFS) $(INCLUDE)
FFLAGS	= -c $(FOPT)
LDFLAGS	= $(COPT) $(LOCDEFS)


SUBDIRS = dbase device diffuse finel geom gpsup imagetool \
	implant math mesh misc oxide plot refine shell xsupr4

LIBDEST = arlib

SLIBS = $(LIBDEST)/diffuse.a $(LIBDEST)/oxide.a $(LIBDEST)/mesh.a \
	$(LIBDEST)/math.a $(LIBDEST)/shell.a $(LIBDEST)/check.a \
	$(LIBDEST)/implant.a $(LIBDEST)/refine.a $(LIBDEST)/finel.a \
	$(LIBDEST)/device.a $(LIBDEST)/imagetool.a $(LIBDEST)/dbase.a \
	$(LIBDEST)/misc.a $(LIBDEST)/geom.a $(LIBDEST)/plot.a $(GRARC)

MAINSRCS = ./main.c
MAINOBJS = ./main.o

CHECKSRCS = check/check.c check/eval.c check/lexical.c check/parse.c \
	check/reduce.c check/sint.c check/split.c check/vector.c \
	check/verify.c
CHECKOBJS = check/check.o check/eval.o check/lexical.o check/parse.o \
	check/reduce.o check/sint.o check/split.o check/vector.o \
	check/verify.o

DBASESRCS = dbase/alloc.c dbase/check.c dbase/clktri.c dbase/couple.c \
	dbase/dimen.c dbase/dispose.c dbase/edge.c dbase/element.c \
	dbase/flip.c dbase/geom.c dbase/geometry.c dbase/grid_loop.c \
	dbase/grid_upd.c dbase/kill_node.c dbase/list.c dbase/locate.c \
	dbase/make_db.c dbase/neigh.c dbase/new_layer.c dbase/node.c \
	dbase/point.c dbase/region.c dbase/remove.c
DBASEOBJS = dbase/alloc.o dbase/check.o dbase/clktri.o dbase/couple.o \
	dbase/dimen.o dbase/dispose.o dbase/edge.o dbase/element.o \
	dbase/flip.o dbase/geom.o dbase/geometry.o dbase/grid_loop.o \
	dbase/grid_upd.o dbase/kill_node.o dbase/list.o dbase/locate.o \
	dbase/make_db.o dbase/neigh.o dbase/new_layer.o dbase/node.o \
	dbase/point.o dbase/region.o dbase/remove.o

DEVICESRCS = device/Electron.c device/Hole.c device/Psi.c \
	device/circuit.c device/contact.c device/dev_blkset.c \
	device/dev_prep.c device/dev_solve.c device/device.c
DEVICEOBJS = device/Electron.o device/Hole.o device/Psi.o \
	device/circuit.o device/contact.o device/dev_blkset.o \
	device/dev_prep.o device/dev_solve.o device/device.o

DIFFUSESRCS = diffuse/Antimony.c diffuse/Arsenic.c diffuse/Beryllium.c \
	diffuse/Boron.c diffuse/Carbon.c diffuse/Cesium.c \
	diffuse/Generic.c diffuse/Germanium.c diffuse/Gold.c \
	diffuse/Interst.c diffuse/Magnesium.c diffuse/Phosphorus.c \
	diffuse/Selenium.c diffuse/Silicon.c diffuse/Tin.c \
	diffuse/Trap.c diffuse/Vacancy.c diffuse/Zinc.c \
	diffuse/active.c diffuse/block_set.c diffuse/defect.c \
	diffuse/diff_init.c diffuse/diffuse.c diffuse/movie.c \
	diffuse/moving.c diffuse/norm.c diffuse/poly.c \
	diffuse/predep.c diffuse/prepare.c diffuse/setup.c \
	diffuse/solve.c diffuse/solve_time.c diffuse/species.c \
	diffuse/time.c
DIFFUSEOBJS = diffuse/Antimony.o diffuse/Arsenic.o diffuse/Beryllium.o \
	diffuse/Boron.o diffuse/Carbon.o diffuse/Cesium.o \
	diffuse/Generic.o diffuse/Germanium.o diffuse/Gold.o \
	diffuse/Interst.o diffuse/Magnesium.o diffuse/Phosphorus.o \
	diffuse/Selenium.o diffuse/Silicon.o diffuse/Tin.o \
	diffuse/Trap.o diffuse/Vacancy.o diffuse/Zinc.o \
	diffuse/active.o diffuse/block_set.o diffuse/defect.o \
	diffuse/diff_init.o diffuse/diffuse.o diffuse/movie.o \
	diffuse/moving.o diffuse/norm.o diffuse/poly.o \
	diffuse/predep.o diffuse/prepare.o diffuse/setup.o \
	diffuse/solve.o diffuse/solve_time.o diffuse/species.o \
	diffuse/time.o

FINELSRCS = finel/FEassmb.c finel/FEsolve.c finel/tomcal.c \
	finel/tri6.c finel/tri7.c
FINDELFSRCS = finel/interface.r finel/toms508.f
FINELOBJS = finel/FEassmb.o finel/FEsolve.o finel/tomcal.o \
	finel/tri6.o finel/tri7.o finel/interface.o finel/toms508.o

GEOMSRCS = geom/limits.c geom/misc.c geom/tnabor.c
GEOMOBJS = geom/limits.o geom/misc.o geom/tnabor.o

IMAGETOOLSRCS = imagetool/fill_grid.c imagetool/image_write.c \
	imagetool/make_grid.c imagetool/makeframe.c imagetool/window.c
IMAGETOOLOBJS = imagetool/fill_grid.o imagetool/image_write.o \
	imagetool/make_grid.o imagetool/makeframe.o imagetool/window.o

IMPLANTSRCS = implant/damage.c implant/fgtmom.c implant/imp_gtprs.c \
	implant/imp_lat.c implant/imp_prson.c implant/imp_qeqv.c \
	implant/imp_qpgauss.c implant/imp_qpprs.c implant/imp_setprs.c \
	implant/imp_vert.c implant/imp_zeqv.c implant/implant.c \
	implant/pearson.c implant/surf.c
IMPLANTOBJS = implant/damage.o implant/fgtmom.o implant/imp_gtprs.o \
	implant/imp_lat.o implant/imp_prson.o implant/imp_qeqv.o \
	implant/imp_qpgauss.o implant/imp_qpprs.o implant/imp_setprs.o \
	implant/imp_vert.o implant/imp_zeqv.o implant/implant.o \
	implant/pearson.o implant/surf.o

MATHSRCS = math/blklu.c math/coldata.c math/generate.c math/genrow.c \
	math/min_fill.c math/mxv.c math/solblk.c math/symb.c
MATHFSRCS = math/vector.f
MATHOBJS = math/blklu.o math/coldata.o math/generate.o math/genrow.o \
	math/min_fill.o math/mxv.o math/solblk.o math/symb.o math/vector.o

MESHSRCS = mesh/check_active.c mesh/ig2_meshio.c mesh/initialize.c \
	mesh/newbackside.c mesh/pi_meshio.c mesh/profile.c \
	mesh/rect.c mesh/save_simpl.c mesh/structure.c
MESHOBJS = mesh/check_active.o mesh/ig2_meshio.o mesh/initialize.o \
	mesh/newbackside.o mesh/pi_meshio.o mesh/profile.o \
	mesh/rect.o mesh/save_simpl.o mesh/structure.o

MISCSRCS = misc/bsd.c misc/cpu.c misc/echo.c misc/get.c misc/man.c \
	misc/pa.c misc/panic.c misc/print_time.c misc/read.c \
	misc/reader.c misc/sint.c
MISCOBJS = misc/bsd.o misc/cpu.o misc/echo.o misc/get.o misc/man.o \
	misc/pa.o misc/panic.o misc/print_time.o misc/read.o \
	misc/reader.o misc/sint.o

OXIDESRCS = oxide/FEbc.c oxide/FEconvert.c oxide/Oxidant.c oxide/coeffox.c \
	oxide/elast.c oxide/erfit.c oxide/mater.c oxide/oxgrow.c \
	oxide/oxide_vel.c oxide/oxrate.c oxide/triox.c oxide/vert.c \
	oxide/viscous.c
OXIDEOBJS = oxide/FEbc.o oxide/FEconvert.o oxide/Oxidant.o oxide/coeffox.o \
	oxide/elast.o oxide/erfit.o oxide/mater.o oxide/oxgrow.o \
	oxide/oxide_vel.o oxide/oxrate.o oxide/triox.o oxide/vert.o \
	oxide/viscous.o

PLOTSRCS = plot/contour.c plot/do_1d.c plot/intersect.c plot/label.c \
	plot/matedge.c plot/material.c plot/option.c plot/plot.c \
	plot/plot_1d.c plot/plot_2d.c plot/print_1d.c plot/select.c
PLOTOBJS = plot/contour.o plot/do_1d.o plot/intersect.o plot/label.o \
	plot/matedge.o plot/material.o plot/option.o plot/plot.o \
	plot/plot_1d.o plot/plot_2d.o plot/print_1d.o plot/select.o

REFINESRCS = refine/bfill.c refine/dbase.c refine/deloop.c \
	refine/deposit.c refine/etch.c refine/grid.c refine/hinit.c \
	refine/interp.c refine/offset.c refine/rate.c refine/rect_tri.c \
	refine/skel.c refine/sp_edge.c refine/string_etch.c \
	refine/string_off.c refine/surface.c refine/triang.c \
	refine/tridata.c refine/triheur.c
REFINEOBJS = refine/bfill.o refine/dbase.o refine/deloop.o \
	refine/deposit.o refine/etch.o refine/grid.o refine/hinit.o \
	refine/interp.o refine/offset.o refine/rate.o refine/rect_tri.o \
	refine/skel.o refine/sp_edge.o refine/string_etch.o \
	refine/string_off.o refine/surface.o refine/triang.o \
	refine/tridata.o refine/triheur.o

SHELLSRCS = shell/do_action.c shell/help.c shell/input.c shell/lex.c \
	shell/list.c shell/macro.c shell/parser.c shell/parser_boot.c \
	shell/proc.c shell/set.c shell/smisc.c
SHELLYSRCS = shell/parser.y
SHELLOBJS = shell/parser.o shell/do_action.o shell/help.o shell/input.o \
	shell/lex.o shell/list.o shell/macro.o shell/parser_boot.o \
	shell/proc.o shell/set.o shell/smisc.o

KEYREADOBJS = keyread/parser.o keyread/expand.o keyread/main.o \
	keyread/write.o

CSRCS	= $(MAINSRCS) $(CHECKSRCS) $(DBASESRCS) $(DEVICESRCS) \
	$(DIFFUSESRCS) $(FINELSRCS) $(GEOMSRCS) $(IMAGETOOLSRCS) \
	$(IMPLANTSRCS) $(MATHSRCS) $(MESHSRCS) $(MISCSRCS) $(OXIDESRCS) \
	$(PLOTSRCS) $(REFINESRCS) $(SHELLSRCS) $(GRSRCS)
YSRCS	= $(SHELLYSRCS)
FSRCS	= $(FINDELFSRCS) $(MATHFSRCS )
SRCS	= $(CSRCS) $(FSRCS)

OBJS	= $(MAINOBJS) $(CHECKOBJS) $(DBASEOBJS) $(DEVICEOBJS) \
	$(DIFFUSEOBJS) $(FINELOBJS) $(GEOMOBJS) $(IMAGETOOLOBJS) \
	$(IMPLANTOBJS) $(MATHOBJS) $(MESHOBJS) $(MISCOBJS) $(OXIDEOBJS) \
	$(PLOTOBJS) $(REFINEOBJS) $(SHELLOBJS) $(GROBJS) $(KEYREADOBJS)

# change the default actions
.c~.o	:
	$(GET) $(GFLAGS) $<
	$(CC) $(CFLAGS) $*.c -o $*.o

.c.o   :
	$(CC) $(CFLAGS) $*.c -o $*.o

.c~.c	:
	$(GET) $(GFLAGS) $<

.y.o    :
	$(YACC) $(YFLAGS) -d $<
	mv y.tab.c $*.c
	mv y.tab.h $*.h
	$(CC) $(CFLAGS) $*.c -o $*.o

.y.c	:
	$(YACC) $(YFLAGS) -d $<
	mv y.tab.c $*.c
	mv y.tab.h $*.h

.y~.y   :
	$(GET) $(GFLAGS) $<

.l~.l   :
	$(GET) $(GFLAGS) $<

.h~.h	:
	$(GET) $(GFLAGS) $<

.f~.o	:
	$(GET) $(GFLAGS) $<
	$(FC) $(FFLAGS) $*.f -o $*.o

.f~.f	:
	$(GET) $(GFLAGS) $<

.f.o	:
	$(FC) $(FFLAGS) $*.f -o $*.o

.r.f    :
	ratfor -C -6c < $*.r > $*.f

#----------------------------------------------------------------------
local: $(SUPREM)
	install -m 755 $(SUPREM) $(BINDIR)

$(SUPREM): $(MAINOBJS) $(SLIBS)
	date
	$(CC) $(LDFLAGS) $(MAINOBJS) $(SLIBS) $(LIBS) -o $@

install: $(SUPREM) $(BINDIR) $(DATADIR) $(HELPDIR) suprem.uk
	install -m 755 $(SUPREM) $(HERE)/../bin
	install -m 644 data/modelrc data/sup4gs.imp $(HERE)/../data

keyread: always
	cd keyread; $(MAKE) SYS='$(SYS)' OPT='$(OPT)' CC='$(CC)'

suprem.uk : data/suprem.key keyread
	keyread/keyread data/suprem.uk < data/suprem.key
	install -m 644 data/suprem.uk $(HERE)/../data

#.. If necessary, create the directory for the suprem executable file.
$(BINDIR):
	mkdir -p $(HERE)/../bin
	chmod -f 755 $(HERE)/../bin

#.. If necessary, create the directory for the suprem data files.
$(DATADIR):
	mkdir -p $(HERE)/../data
	chmod -f 755 $(HERE)/../data

#.. If necessary, create the directory for the suprem help files.
#.. Don't get your hopes up though.  There aren't any yet.
$(HELPDIR):
	mkdir -p $(HERE)/../help
	chmod -f 755 $(HERE)/../help

main.o:
	$(CC) $(CFLAGS) $(DATAFILES) main.c -o main.o

$(LIBDEST)/check.a:	$(CHECKOBJS)
	$(AR) $(ARFLAGS) $@ $(CHECKOBJS)
	cd check ; $(RANLIB) ../$@
$(LIBDEST)/dbase.a:	$(DBASEOBJS)
	$(AR) $(ARFLAGS) $@ $(DBASEOBJS)
	cd dbase ; $(RANLIB) ../$@
$(LIBDEST)/device.a:	$(DEVICEOBJS)
	$(AR) $(ARFLAGS) $@ $(DEVICEOBJS)
	cd device ; $(RANLIB) ../$@
$(LIBDEST)/diffuse.a:	$(DIFFUSEOBJS)
	mkdir $(LIBDEST)
	$(AR) $(ARFLAGS) $@ $(DIFFUSEOBJS)
	cd diffuse ; $(RANLIB) ../$@
$(LIBDEST)/finel.a:	$(FINELOBJS)
	$(AR) $(ARFLAGS) $@ $(FINELOBJS)
	cd finel ; $(RANLIB) ../$@
$(LIBDEST)/geom.a:	$(GEOMOBJS)
	$(AR) $(ARFLAGS) $@ $(GEOMOBJS)
	cd geom ; $(RANLIB) ../$@
$(LIBDEST)/imagetool.a: $(IMAGETOOLOBJS)
	$(AR) $(ARFLAGS) $@ $(IMAGETOOLOBJS)
	cd imagetool ; $(RANLIB) ../$@
$(LIBDEST)/implant.a:	$(IMPLANTOBJS)
	$(AR) $(ARFLAGS) $@ $(IMPLANTOBJS)
	cd implant ; $(RANLIB) ../$@
$(LIBDEST)/math.a:	$(MATHOBJS)
	$(AR) $(ARFLAGS) $@ $(MATHOBJS)
	cd math ; $(RANLIB) ../$@
$(LIBDEST)/mesh.a:	$(MESHOBJS)
	$(AR) $(ARFLAGS) $@ $(MESHOBJS)
	cd mesh ; $(RANLIB) ../$@
$(LIBDEST)/misc.a:	$(MISCOBJS)
	$(AR) $(ARFLAGS) $@ $(MISCOBJS)
	cd misc ; $(RANLIB) ../$@
$(LIBDEST)/oxide.a:	$(OXIDEOBJS)
	$(AR) $(ARFLAGS) $@ $(OXIDEOBJS)
	cd oxide ; $(RANLIB) ../$@
$(LIBDEST)/plot.a:	$(PLOTOBJS)
	$(AR) $(ARFLAGS) $@ $(PLOTOBJS)
	cd plot ; $(RANLIB) ../$@
$(LIBDEST)/refine.a:	$(REFINEOBJS)
	$(AR) $(ARFLAGS) $@ $(REFINEOBJS)
	cd refine ; $(RANLIB) ../$@
$(LIBDEST)/shell.a:	$(SHELLOBJS)
	$(AR) $(ARFLAGS) $@ $(SHELLOBJS)
	cd shell ; $(RANLIB) ../$@
$(GRARC):		$(GROBJS)
	$(AR) $(ARFLAGS) $@ $(GROBJS)
	$(RANLIB) $@

clean   :
	rm -f $(SUPREM) $(SLIBS) $(MAINOBJS) $(OBJS)

tags    : $(SRCS)
	ctags $(SRCS)

lint    : $(CSRCS)
	lint $(CFLAGS) $(CSRCS)

version :
	prs -d":Dt: :F:\n:C:\n\n" $(SCCS)

# If you're using the ultrix cc then change the -M to -Em
depend  : $(YSRCS)
	cat Makefile.proto > Makefile
	$(CC) -M $(CFLAGS) $(CSRCS)|\
	(while read TARGET D1 D2 D3 ; do \
		TGTNAME=`basename $$TARGET .o:`; \
		TGTNAME=`basename $$TGTNAME .o`; \
		if test $$D1 = ":"; then \
			DEPEND=$$D2; \
		else \
			DEPEND=$$D1; \
		fi; \
		DEPNAME=`basename $$DEPEND .c`; \
		DEPNAME=`basename $$DEPNAME .r`; \
		DEPNAME=`basename $$DEPNAME .f`; \
		if test $$DEPNAME = $$TGTNAME; then \
			DEPDIR=`dirname $$DEPEND`; \
		fi; \
		echo $$DEPDIR/$$TARGET $$D1 $$D2 $$D3; \
	done) >> Makefile

always:

#----------------------------------------------------------------------
# DO NOT DELETE THIS LINE -- make depend may depend on it.
